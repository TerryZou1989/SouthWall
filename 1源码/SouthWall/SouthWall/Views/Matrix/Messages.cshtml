@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "_MatrixLayout";
    ViewData["Title"] = "留言吧";
    var txlist = this.ViewData["txlist"] as List<TouXiangsEntity>;
    var list = this.ViewData["list"] as List<MessagesEntity>;
    List<List<MessagesEntity>> colList = new List<List<MessagesEntity>>();
    List<MessagesEntity> list0 = new List<MessagesEntity>();
    List<MessagesEntity> list1 = new List<MessagesEntity>();
    List<MessagesEntity> list2 = new List<MessagesEntity>();
    List<MessagesEntity> list3 = new List<MessagesEntity>();
    int i = 0;
    foreach (var item in list)
    {
        switch (i)
        {
            case 0:
                list0.Add(item);
                break;
            case 1:
                list1.Add(item);
                break;
            case 2:
                list2.Add(item);
                break;
            case 3:
                list3.Add(item);
                i = -1;
                break;
        }
        i++;
    }
    colList.Add(list0);
    colList.Add(list1);
    colList.Add(list2);
    colList.Add(list3);
    int count = 20;
}
<div class="row m-0">
    @foreach (var col in colList)
    {
        <div class="col-lg-3 col-md-4 col-sm-12 col-12 px-1">
            @foreach (var item in col)
            {
                <div class="card bg-dark border-1 border-secondary text-light mb-2">
                    <div class="card-body">
                        <p class="fs-6 mb-2">@(item.F_Content)</p>
                        <div class="fs-7 text-tz-gray">
                            <img referrer="no-referrer|origin|unsafe-url" src="@(txlist[Com.RandomInt(txlist.Count)].F_ImgSrc)" class="rounded-circle" style="width:26px" />
                            @(item.F_UserName)&lt;@(item.F_UserEmail)&gt;
                        </div>
                        <i class="fs-7 text-secondary">@(item.F_CreateTime.Value.ToString("yyyy-MM-dd HH:mm"))</i>
                    </div>
                    <div class="card-footer text-end border-secondary">
                        <button class="btn btn-sm btn-outline-primary btnreply" data-id="@(item.F_Id)">回复</button>
                        <button class="btn btn-sm btn-outline-danger btndelete" data-id="@(item.F_Id)">删除</button>
                    </div>
                </div>
            }
        </div>
    }
</div>
<div class="modal fade" id="modalForm" tabindex="-1" aria-labelledby="modalFormLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-xl ">
        <div class="modal-content bg-dark text-light">
            <div class="modal-header border-secondary">
                <h1 class="modal-title fs-5" id="modalFormLabel">回复</h1>
                <button type="button" class="btn-close text-light" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="txtTo" class="form-label">To:</label>
                    <textarea class="form-control bg-dark text-light" id="txtTo" rows="1" disabled></textarea>
                </div>
                <div class="mb-3">
                    <label for="txtFromContent" class="form-label">他（她）说:</label>
                    <textarea class="form-control bg-dark text-light" id="txtFromContent" rows="5" disabled></textarea>
                </div>
                <div class="mb-3">
                    <label for="txtToContent" class="form-label">对他（她）说</label>
                    <textarea class="form-control bg-dark text-light" id="txtToContent" rows="5" placeholder="内容"></textarea>
                </div>
            </div>
            <div class="modal-footer border-secondary">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">关闭</button>
                <button type="button" class="btn btn-primary" id="btnReply">回复</button>
            </div>
        </div>
    </div>
</div>
<script>
    var pageMatrix = function () {
        const modalFormEl = document.getElementById('modalForm');
        const modalForm = new bootstrap.Modal('#modalForm', { keyboard: false });
        modalFormEl.addEventListener('shown.bs.modal', event => { });
        modalFormEl.addEventListener('hidden.bs.modal', event => { });
        $("#btnCreate").remove();
        var initDelete = function () {
            var btndeleteList = $(".btndelete");
            for (var i = 0; i < btndeleteList.length; i++) {
                $(btndeleteList[i]).click(function () {
                    if (confirm("是否忍心删除此留言？")) {
                        var id = $(this).attr("data-id");
                        apiClient.messages.delete(id, function (d) {
                            alert(d);
                            location.reload();
                        }, function (err) {
                            alert(err.message);
                        });
                    }
                });
            }
        }
        initDelete();
        var editId="";
        var initReply = function () {
            var btnreplyList = $(".btnreply");
            for (var i = 0; i < btnreplyList.length; i++) {
                $(btnreplyList[i]).click(function () {
                    editId = $(this).attr("data-id");
                    apiClient.messages.get(editId, function (d) {
                        $("#txtTo").val(d.f_UserName+"<"+d.f_UserEmail+">");
                        $("#txtFromContent").val(d.f_Content);
                        modalForm.show();
                    }, function (err) {
                        alert(err.message);
                    });
                });
            }
        }
        initReply();
        $("#btnReply").click(function(){
           var content=$.trim($("#txtToContent").val());
           apiClient.messages.reply(editId,content, function (d) {
                        alert("回复成功");
                        modalForm.hide();
                    }, function (err) {
                        alert(err.message);
                    });
        });
    };
    $(function () {
        new pageMatrix();
    });
</script>

